<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<!-- Basic build settings -->
		<OutputType>WinExe</OutputType>
		<TargetFramework>net9.0-windows</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<UseWPF>true</UseWPF>

		<!-- Assembly info -->
		<GenerateAssemblyInfo>true</GenerateAssemblyInfo>
		<AssemblyTitle>CastleMiner Launcher</AssemblyTitle>
		<Company>Zennara</Company>
		<Product>CastleMiner Launcher</Product>
		<Authors>Keagan Landfried</Authors>
		<Description>Launcher to manage multiple versions and installations of CastleMiner games.</Description>
		<Copyright>© 2025 Keagan Landfried</Copyright>
		<Version>0.2.0.0</Version>
		<FileVersion>0.2.0.0</FileVersion>
		<InformationalVersion>0.2.0.0-alpha</InformationalVersion>

		<!-- Manifest version defaults to project version -->
		<ManifestVersion Condition="'$(ManifestVersion)' == ''">$(Version)</ManifestVersion>

		<!-- Publish settings -->
		<PublishTrimmed>false</PublishTrimmed>
		<PublishAot>false</PublishAot>
		<!-- WPF trimming not supported -->
		<SelfContained>true</SelfContained>
		<PublishSingleFile>false</PublishSingleFile>
		<!-- Multi-file for faster startup -->
		<RuntimeIdentifier>win-x64</RuntimeIdentifier>
		<EnableCompressionInSingleFile>false</EnableCompressionInSingleFile>

		<!-- Exclude debug symbols -->
		<DebugType>None</DebugType>
		<IncludeSymbols>false</IncludeSymbols>
		<DebugSymbols>false</DebugSymbols>
	</PropertyGroup>

	<!-- Resource images -->
	<ItemGroup>
		<Resource Include="assets\logos\cmz.png" Condition="Exists('assets\logos\cmz.png')" />
		<Resource Include="assets\logos\cmw.png" Condition="Exists('assets\logos\cmw.png')" />
		<Resource Include="assets\backdrops\cmz-backdrop.png" Condition="Exists('assets\backdrops\cmz-backdrop.png')" />
		<Resource Include="assets\backdrops\cmw-backdrop.png" Condition="Exists('assets\backdrops\cmw-backdrop.png')" />
		<Resource Include="assets\wordarts\castleminerz.png" Condition="Exists('assets\wordarts\castleminerz.png')" />
		<Resource Include="assets\wordarts\castleminerwarfare.png" Condition="Exists('assets\wordarts\castleminerwarfare.png')" />
	</ItemGroup>

	<!-- Copy external content to output folder -->
	<ItemGroup>
		<Content Include="assets\backdrops\**\*.*">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
		<Content Include="assets\wordarts\**\*.*">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
		<Content Include="assets\blocks\**\*.*">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

	<!-- NuGet dependencies -->
	<ItemGroup>
		<PackageReference Include="Ookii.Dialogs.Wpf" Version="5.0.1" />
		<PackageReference Include="AutoUpdater.NET.Official" Version="1.9.2" />
	</ItemGroup>

	<!-- Exclude any PDBs that may still exist -->
	<ItemGroup>
		<None Update="*.pdb">
			<CopyToPublishDirectory>Never</CopyToPublishDirectory>
		</None>
	</ItemGroup>

	<!-- Normalize PublishDir to avoid trailing backslash breaking cmd.exe quoting -->
	<PropertyGroup>
		<PublishDirNormalized>$([System.String]::Copy('$(PublishDir)').TrimEnd('\'))</PublishDirNormalized>
		<!-- Strip any SemVer build metadata (+...) from InformationalVersion for artifacts -->
		<InformationalVersionNoMetadata>$([System.String]::Copy('$(InformationalVersion)').Split('+')[0])</InformationalVersionNoMetadata>
		<ZipFileName>CMLauncher_$(InformationalVersionNoMetadata).zip</ZipFileName>
	</PropertyGroup>

	<!-- Generate manifest.json after publish using PowerShell script, then zip and clean using a dedicated script -->
	<Target Name="GenerateManifest" AfterTargets="Publish">
		<Message Text="Generating manifest.json in $(PublishDirNormalized) using version $(InformationalVersionNoMetadata)" Importance="High" />
		<Exec Command="powershell -NoProfile -ExecutionPolicy Bypass -File &quot;$(MSBuildProjectDirectory)\..\..\scripts\generate-manifest.ps1&quot; -Directory &quot;$(PublishDirNormalized)&quot; -Version &quot;$(InformationalVersionNoMetadata)&quot;" />

		<Message Text="Packing files into $(ZipFileName) (excluding manifest.json) and cleaning folder..." Importance="High" />
		<Exec Command="powershell -NoProfile -ExecutionPolicy Bypass -File &quot;$(MSBuildProjectDirectory)\..\..\scripts\zip-publish.ps1&quot; -Directory &quot;$(PublishDirNormalized)&quot; -ZipName &quot;$(ZipFileName)&quot;" />
	</Target>

</Project>
