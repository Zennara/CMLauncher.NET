<Window x:Class="CMLauncher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CMLauncher"
        mc:Ignorable="d"
        Title="CM Launcher" Height="600" Width="1000"
        WindowStartupLocation="CenterScreen"
        Background="#151515">
    <Window.Resources>
        <!-- Theming brushes: darker base with CastleMiner Z red accent -->
        <SolidColorBrush x:Key="AppBackgroundBrush" Color="#151515"/>
        <SolidColorBrush x:Key="HeaderBackgroundBrush" Color="#1B1B1B"/>
        <SolidColorBrush x:Key="SidebarBackgroundBrush" Color="#1A1A1A"/>
        <SolidColorBrush x:Key="ContentBackgroundBrush" Color="#121212"/>

        <SolidColorBrush x:Key="AccentBrush" Color="#B71C1C"/>
        <SolidColorBrush x:Key="AccentHoverBrush" Color="#D32F2F"/>
        <SolidColorBrush x:Key="AccentPressedBrush" Color="#8E1515"/>

        <Style x:Key="TabButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="20,10"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#2A2A2A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#303030"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Sidebar button with explicit selected-state styling via attached property -->
        <Style x:Key="SidebarButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="15,10"/>
            <Setter Property="Margin" Value="0,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="buttonBorder" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Hover visual for any item -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#2A2A2A"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <!-- Selected state visual via attached property -->
                            <Trigger Property="local:SelectionProperties.IsSelected" Value="True">
                                <Setter Property="Background" Value="#202020"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <!-- Hover + Selected: slightly brighter than selected -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="local:SelectionProperties.IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#2E2E2E"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <!-- Pressed visual -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#333333"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="PlayButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="80,12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="4"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource AccentHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource AccentPressedBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="InstanceComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="#1E1E1E"/>
            <Setter Property="Foreground" Value="#CCCCCC"/>
            <Setter Property="BorderBrush" Value="#2E2E2E"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,5"/>
            <Setter Property="FontSize" Value="13"/>
        </Style>

        <!-- Flat toggle look for the bottom-left selector -->
        <Style x:Key="InstallToggleStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#CCCCCC"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="root" Property="Background" Value="#252525"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="root" Property="Background" Value="#2B2B2B"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Menu item style inside popup -->
        <Style x:Key="InstallMenuItemStyle" TargetType="Button">
            <Setter Property="Background" Value="#222222"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="bg" Background="{TemplateBinding Background}" CornerRadius="3" Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Selected visual: CastleMiner red -->
                            <Trigger Property="local:SelectionProperties.IsSelected" Value="True">
                                <Setter TargetName="bg" Property="Background" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="#FFFFFF"/>
                            </Trigger>
                            <!-- Hover when selected: slightly brighter -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="local:SelectionProperties.IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="bg" Property="Background" Value="{StaticResource AccentHoverBrush}"/>
                            </MultiTrigger>
                            <!-- Normal hover -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bg" Property="Background" Value="#2A2A2A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bg" Property="Background" Value="#303030"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Account toggle style for the top-left header -->
        <Style x:Key="AccountToggleStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="root" Property="Background" Value="#232323"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="root" Property="Background" Value="#262626"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Simple menu item style reused for account popup -->
        <Style x:Key="AccountMenuItemStyle" TargetType="Button" BasedOn="{StaticResource InstallMenuItemStyle}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="180"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Top account info panel -->
        <Border Grid.Column="0" Grid.Row="0" Background="{StaticResource HeaderBackgroundBrush}" BorderBrush="#2A2A2A" BorderThickness="0,0,0,1">
            <Grid Margin="6,4">
                <ToggleButton x:Name="AccountToggle" Style="{StaticResource AccountToggleStyle}" HorizontalAlignment="Stretch">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <!-- Avatar -->
                        <Border Width="28" Height="28" CornerRadius="14" Background="#3C3C3C" VerticalAlignment="Center"/>
                        <!-- Texts -->
                        <StackPanel Grid.Column="1" Margin="8,0,8,0" VerticalAlignment="Center">
                            <TextBlock x:Name="AccountDisplayName" Text="Username" Foreground="White" FontWeight="SemiBold" FontSize="12" TextTrimming="CharacterEllipsis"/>
                            <TextBlock Text="Steam Account" Foreground="#AAAAAA" FontSize="11"/>
                        </StackPanel>
                        <!-- Caret -->
                        <TextBlock Grid.Column="2" Text="▾" Foreground="#AAAAAA" VerticalAlignment="Center"/>
                    </Grid>
                </ToggleButton>

                <!-- Account popup (below), aligned to toggle width -->
                <Popup x:Name="AccountPopup"
                       PlacementTarget="{Binding ElementName=AccountToggle}"
                       Placement="Bottom"
                       VerticalOffset="2"
                       StaysOpen="False"
                       AllowsTransparency="True"
                       PopupAnimation="Fade"
                       IsOpen="{Binding IsChecked, ElementName=AccountToggle, Mode=TwoWay}">
                    <Border Background="{StaticResource AppBackgroundBrush}" BorderThickness="1" BorderBrush="#333333" CornerRadius="4" Padding="6">
                        <StackPanel MinWidth="{Binding ElementName=AccountToggle, Path=ActualWidth}">
                            <Button Style="{StaticResource AccountMenuItemStyle}" Click="Logout_Click">
                                <TextBlock Text="LOG OUT" FontWeight="SemiBold"/>
                            </Button>
                        </StackPanel>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <!-- Top header with tabs -->
        <Grid Grid.Column="1" Grid.Row="0" Background="{StaticResource HeaderBackgroundBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <!-- Edition title -->
            <TextBlock Grid.Row="0" Text="CASTLEMINER Z" Foreground="White" 
                       FontWeight="Bold" Margin="20,5,0,0" FontSize="12"
                       x:Name="EditionTitleText"/>
            
            <!-- Tab buttons -->
            <StackPanel Grid.Row="1" Orientation="Horizontal" x:Name="TabsPanel">
                <Button Content="Play" Style="{StaticResource TabButtonStyle}" Tag="Play" Click="TabButton_Click" 
                        BorderThickness="0,0,0,2" BorderBrush="{StaticResource AccentBrush}"/>
                <Button Content="Installations" Style="{StaticResource TabButtonStyle}" Tag="Installations" Click="TabButton_Click"/>
                <Button Content="Patch Notes" Style="{StaticResource TabButtonStyle}" Tag="PatchNotes" Click="TabButton_Click"/>
            </StackPanel>
        </Grid>

        <!-- Left sidebar -->
        <Border Grid.Column="0" Grid.Row="1" Background="{StaticResource SidebarBackgroundBrush}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Sidebar navigation -->
                <StackPanel Grid.Row="0" Margin="0,5,0,0" x:Name="SidebarPanel">
                    <Button Style="{StaticResource SidebarButtonStyle}" Click="SidebarButton_Click" Tag="CMZ" Name="btnCMZ">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="pack://application:,,,/assets/logos/cmz.png" Width="18" Height="18" Margin="0,0,10,0" Stretch="Uniform" RenderOptions.BitmapScalingMode="HighQuality"/>
                            <StackPanel>
                                <TextBlock Text="CASTLEMINER Z" FontWeight="SemiBold"/>
                            </StackPanel>
                        </StackPanel>
                    </Button>
                    
                    <Button Style="{StaticResource SidebarButtonStyle}" Click="SidebarButton_Click" Tag="CMW" Name="btnCMW">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="pack://application:,,,/assets/logos/cmw.png" Width="18" Height="18" Margin="0,0,10,0" Stretch="Uniform" RenderOptions.BitmapScalingMode="HighQuality"/>
                            <StackPanel>
                                <TextBlock Text="CM WARFARE" FontWeight="SemiBold"/>
                            </StackPanel>
                        </StackPanel>
                    </Button>
                </StackPanel>

                <!-- Bottom sidebar items -->
                <StackPanel Grid.Row="1" Margin="0,0,0,10" x:Name="BottomSidebarPanel">
                    <Button Style="{StaticResource SidebarButtonStyle}" Click="SidebarButton_Click" Tag="Changelog" Name="btnChangelog">
                        <StackPanel Orientation="Horizontal">
                            <!-- Fixed 18x18 icon slot to align with game icons -->
                            <Border Width="18" Height="18" Margin="0,0,10,0" VerticalAlignment="Center" Background="Transparent">
                                <TextBlock Text="≡" FontSize="13" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <TextBlock Text="WHAT'S NEW" FontWeight="SemiBold"/>
                        </StackPanel>
                    </Button>
                    
                    <Button Style="{StaticResource SidebarButtonStyle}" Click="SidebarButton_Click" Tag="Settings" Name="btnSettings">
                        <StackPanel Orientation="Horizontal">
                            <!-- Fixed 18x18 icon slot to align with game icons -->
                            <Border Width="18" Height="18" Margin="0,0,10,0" VerticalAlignment="Center" Background="Transparent">
                                <TextBlock Text="⚙" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <TextBlock Text="SETTINGS" FontWeight="SemiBold"/>
                        </StackPanel>
                    </Button>
                    
                    <TextBlock Text="v1.0.0" FontSize="11" Foreground="#777777" Margin="15,5,0,0"/>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Main content area -->
        <Grid Grid.Column="1" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Content host with backdrop and wordart overlay -->
            <Grid Grid.Row="0">
                <Image x:Name="BackdropImage" Stretch="UniformToFill" Opacity="0.9"/>
                <Image x:Name="WordartImage" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False" Opacity="0.95" MaxWidth="520" Margin="0,-130,0,0"/>
                <Frame x:Name="MainContentFrame" NavigationUIVisibility="Hidden" Background="Transparent" BorderThickness="0" BorderBrush="Transparent"/>
            </Grid>

            <!-- Bottom panel with version selection and play button -->
            <Grid Grid.Row="1" Background="{StaticResource SidebarBackgroundBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <!-- Installation selector (bottom-left) -->
                <Grid Grid.Column="0" VerticalAlignment="Center" Margin="10,8,0,8">
                    <ToggleButton x:Name="InstallToggle" Style="{StaticResource InstallToggleStyle}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="SelectedInstallIcon" Width="24" Height="24" Stretch="Uniform" VerticalAlignment="Center"/>
                            <StackPanel Grid.Column="1" Margin="8,0" VerticalAlignment="Center">
                                <TextBlock x:Name="SelectedInstallName" Text="Uknown" Foreground="White" FontWeight="SemiBold" FontSize="12"/>
                                <TextBlock x:Name="SelectedInstallVersion" Text="Unknown" Foreground="#CCCCCC" FontSize="11"/>
                            </StackPanel>
                            <TextBlock Grid.Column="2" Text="▾" Foreground="#AAAAAA" VerticalAlignment="Center" Margin="8,0,0,0"/>
                        </Grid>
                    </ToggleButton>

                    <!-- Popup above; width anchored to toggle via MinWidth -->
                    <Popup x:Name="InstallPopup"
                           PlacementTarget="{Binding ElementName=InstallToggle}"
                           Placement="Top"
                           VerticalOffset="-4"
                           StaysOpen="False"
                           AllowsTransparency="True"
                           PopupAnimation="Fade"
                           IsOpen="{Binding IsChecked, ElementName=InstallToggle, Mode=TwoWay}">
                        <Border Background="{StaticResource AppBackgroundBrush}" BorderThickness="0" CornerRadius="4" Padding="0">
                            <StackPanel x:Name="InstallItemsPanel" MinWidth="{Binding ElementName=InstallToggle, Path=ActualWidth}" />
                        </Border>
                    </Popup>
                </Grid>

                <!-- Additional info could go here -->
                <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="15,0"/>
                
                <!-- Play button -->
                <Button Grid.Column="2" Content="PLAY" Style="{StaticResource PlayButtonStyle}" 
                        Click="PlayButton_Click" Margin="10"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
